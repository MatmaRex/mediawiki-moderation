{
	"name": "Moderation",
	"version": "1.2.50",
	"author": "Edward Chernenko",
	"url": "https://www.mediawiki.org/wiki/Extension:Moderation",
	"descriptionmsg": "moderation-desc",
	"license-name": "GPL-3.0+",
	"type": "antispam",
	"GroupPermissions": {
		"automoderated": {
			"skip-moderation": true
		},
		"moderator": {
			"moderation": true
		},
		"checkuser": {
			"moderation-checkuser": true
		}
	},
	"GrantPermissions": {
		"basic": {
			"skip-moderation": true
		}
	},
	"AvailableRights": [
		"skip-moderation",
		"moderation"
	],
	"SpecialPages": {
		"Moderation": "SpecialModeration"
	},
	"APIModules": {
		"moderation": "ApiModeration"
	},
	"APIPropModules": {
		"moderationpreload": "ApiQueryModerationPreload"
	},
	"LogTypes": [
		"moderation"
	],
	"LogRestrictions": {
		"moderation": "moderation"
	},
	"LogActionsHandlers": {
		"moderation/*": "ModerationLogFormatter"
	},
	"MessagesDirs": {
		"Moderation": [
			"i18n",
			"api/i18n"
		]
	},
	"ExtensionMessagesFiles": {
		"ModerationAlias": "Moderation.alias.php"
	},
	"AutoloadClasses": {
		"SpecialModeration": "SpecialModeration.php",
		"ApiModeration": "api/ApiModeration.php",
		"ApiQueryModerationPreload": "api/ApiQueryModerationPreload.php",
		"IModerationEntry": "lib/entry/IModerationEntry.php",
		"ModerationLogFormatter": "ModerationLogFormatter.php",
		"ModerationSpecialUpload": "ModerationSpecialUpload.php",
		"ModerationAjaxHook": "util/ModerationAjaxHook.php",
		"ModerationBlockCheck": "util/ModerationBlockCheck.php",
		"ModerationCanSkip": "util/ModerationCanSkip.php",
		"ModerationNewChange": "lib/ModerationNewChange.php",
		"ModerationApiHooks": "hooks/ModerationApiHooks.php",
		"ModerationApprovableEntry": "lib/entry/ModerationApprovableEntry.php",
		"ModerationApproveHook": "hooks/ModerationApproveHook.php",
		"ModerationPageForms": "plugins/ModerationPageForms.php",
		"ModerationPlugins": "plugins/ModerationPlugins.php",
		"ModerationPreload": "hooks/ModerationPreload.php",
		"ModerationEditHooks": "hooks/ModerationEditHooks.php",
		"ModerationEntry": "lib/entry/ModerationEntry.php",
		"ModerationEntryEdit": "lib/entry/ModerationEntryEdit.php",
		"ModerationEntryFormatter": "lib/entry/ModerationEntryFormatter.php",
		"ModerationEntryMove": "lib/entry/ModerationEntryMove.php",
		"ModerationEntryUpload": "lib/entry/ModerationEntryUpload.php",
		"ModerationError": "util/ModerationError.php",
		"ModerationFormatTimestamp": "util/ModerationFormatTimestamp.php",
		"ModerationNotifyModerator": "hooks/ModerationNotifyModerator.php",
		"ModerationMoveHooks": "hooks/ModerationMoveHooks.php",
		"ModerationQueuedSuccessException": "lib/exception/ModerationQueuedSuccessException.php",
		"ModerationUploadHooks": "hooks/ModerationUploadHooks.php",
		"ModerationUpdater": "hooks/ModerationUpdater.php",
		"ModerationVersionCheck": "util/ModerationVersionCheck.php",
		"ModerationAction": "action/ModerationAction.php",
		"ModerationActionShow": "action/ModerationActionShow.php",
		"ModerationActionShowImage": "action/ModerationActionShowImage.php",
		"ModerationActionBlock": "action/ModerationActionBlock.php",
		"ModerationActionApprove": "action/ModerationActionApprove.php",
		"ModerationActionReject": "action/ModerationActionReject.php",
		"ModerationActionMerge": "action/ModerationActionMerge.php",
		"ModerationActionPreview": "action/ModerationActionPreview.php",
		"RollbackResistantQuery": "util/RollbackResistantQuery.php"
	},
	"ResourceModules": {
		"ext.moderation.special": {
			"position": "bottom",
			"styles": "ext.moderation.special.css"
		},
		"ext.moderation.special.ajax": {
			"position": "bottom",
			"scripts": "ext.moderation.special.ajax.js",
			"styles": "ext.moderation.special.ajax.css",
			"dependencies": [
				"mediawiki.api",
				"mediawiki.Uri"
			],
			"messages": [
				"moderation-block",
				"moderation-unblock"
			]
		},
		"ext.moderation.edit": {
			"position": "bottom",
			"styles": "ext.moderation.edit.css"
		},
		"ext.moderation.ajaxhook": {
			"position": "bottom",
			"scripts": "ext.moderation.ajaxhook.js",
			"targets": [
				"desktop",
				"mobile"
			]
		},
		"ext.moderation.ve": {
			"position": "top",
			"scripts": [
				"visualeditor/ajaxhook.ve.js",
				"visualeditor/preload.ve.js"
			],
			"targets": [
				"desktop"
			],
			"dependencies": [
				"mediawiki.api",
				"ext.visualEditor.targetLoader",
				"ext.moderation.ajaxhook"
			]
		},
		"ext.moderation.mf": {
			"position": "bottom",
			"scripts": [
				"mobilefrontend/notify.mf.js",
				"mobilefrontend/preload.mf.js"
			],
			"styles": [
				"mobilefrontend/notify.mf.css"
			],
			"targets": [
				"mobile"
			],
			"dependencies": [
				"mediawiki.api",
				"mediawiki.notification",
				"mediawiki.util",
				"mobile.editor.api",
				"ext.moderation.ajaxhook",
				"mobile.startup"
			],
			"messages": [
				"mobile-frontend-editor-success-new-page",
				"mobile-frontend-editor-success-landmark-1",
				"mobile-frontend-editor-success"
			]
		},
		"ext.moderation.notify": {
			"position": "bottom",
			"scripts": "ext.moderation.notify.js",
			"styles": "ext.moderation.notify.css",
			"dependencies": [
				"mediawiki.jqueryMsg",
				"mediawiki.user",
				"mediawiki.Uri",
				"mediawiki.util"
			],
			"messages": [
				"moderation-edit-queued",
				"moderation-pending-review",
				"moderation-suggest-signup"
			],
			"targets": [
				"desktop",
				"mobile"
			]
		},
		"ext.moderation.notify.desktop": {
			"position": "bottom",
			"scripts": "ext.moderation.notify.desktop.js",
			"styles": "ext.moderation.notify.desktop.css",
			"targets": [
				"desktop"
			]
		}
	},
	"ResourceFileModulePaths": {
		"localBasePath": "modules",
		"remoteExtPath": "Moderation/modules"
	},
	"Hooks": {
		"LocalUserCreated": [
			"ModerationPreload::onLocalUserCreated"
		],
		"AlternateEdit": [
			"ModerationPreload::onAlternateEdit"
		],
		"ApiBeforeMain": [
			"ModerationApiHooks::onApiBeforeMain"
		],
		"ApiCheckCanExecute": [
			"ModerationApiHooks::onApiCheckCanExecute"
		],
		"BeforeInitialize": [
			"ModerationPlugins::install"
		],
		"BeforePageDisplay": [
			"ModerationEditHooks::onBeforePageDisplay"
		],
		"EditFilter": [
			"ModerationEditHooks::onEditFilter"
		],
		"EditFormInitialText": [
			"ModerationPreload::onEditFormInitialText"
		],
		"EditFormPreloadText": [
			"ModerationPreload::onEditFormPreloadText"
		],
		"GetNewMessagesAlert": [
			"ModerationNotifyModerator::onGetNewMessagesAlert"
		],
		"LoadExtensionSchemaUpdates": [
			"ModerationUpdater::onLoadExtensionSchemaUpdates"
		],
		"MovePageCheckPermissions": [
			"ModerationMoveHooks::onMovePageCheckPermissions"
		],
		"PageContentSaveComplete": [
			"ModerationEditHooks::onPageContentSaveComplete"
		],
		"PageContentSave": [
			"ModerationEditHooks::onPageContentSave"
		],
		"PageForms::EditFormPreloadText": [
			"ModerationPageForms::preloadText"
		],
		"PageForms::EditFormInitialText": [
			"ModerationPageForms::preloadText"
		],
		"EditPage::showEditForm:fields": [
			"ModerationEditHooks::PrepareEditForm"
		],
		"UploadVerifyFile": [
			"ModerationUploadHooks::onUploadVerifyFile"
		],
		"UploadVerifyUpload": [
			"ModerationUploadHooks::onUploadVerifyUpload"
		],
		"getUserPermissionsErrors": [
			"ModerationUploadHooks::ongetUserPermissionsErrors"
		]
	},
	"config": {
		"@doc1": "If false, new edits are applied as usual (not sent to moderation).",
		"ModerationEnable": true,

		"@doc2": "Time (in seconds) after which rejected edit could no longer be approved.",
		"ModerationTimeToOverrideRejection": 1209600,

		"@doc3": "If true, Preview link is shown for pending edits. Normally you shouldn't enable this (when following Best Practices, approval/rejection depends on content, not formatting).",
		"ModerationPreviewLink": false,

		"@doc4": "If true, administrator is notified of new changes that await moderation.",
		"ModerationNotificationEnable": false,

		"@doc5": "If true, only notify about new pages, not all edits.",
		"ModerationNotificationNewOnly": false,

		"@doc6": "Email address to send notifications to.",
		"ModerationEmail": "",

		"@doc7": "If true/false, assume presence/absence of VisualEditor. Default: auto-detect.",
		"ModerationSupportVisualEditor": "guess",

		"@doc8": "If true/false, assume presence/absence of MobileFrontend. Default: auto-detect.",
		"ModerationSupportMobileFrontend": "guess",

		"@doc9": "If true, supports third-party JavaScript editors even if both VisualEditor and MobileFrontend are not installed.",
		"ModerationForceAjaxHook": false,

		"@doc10": "Experimental: if true, enable Ajax handling of links on Special:Moderation.",
		"ModerationUseAjax": false,

		"@doc11": "If set to an array of namespace numbers (e.g. NS_MAIN, NS_FILE), moderation is only enabled in these namespaces (edits in other namespaces will bypass moderation). Default (empty array): moderation is enabled everywhere.",
		"ModerationOnlyInNamespaces": [],

		"@doc12": "If set to an array of namespace numbers (e.g. NS_MAIN, NS_FILE), non-automoderated users can bypass moderation in these namespaces. Default (empty array): moderation can't be bypassed anywhere.",
		"ModerationIgnoredInNamespaces": [],

		"@doc13": "Internal (DON'T ENABLE IN PRODUCTION): if true, page moves are intercepted.",
		"ModerationInterceptMoves": false
	},
	"manifest_version": 1
}
